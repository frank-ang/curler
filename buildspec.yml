version: 0.2
phases:
  install:
    commands:
      #- echo Install phase...
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR"
      - $(aws ecr get-login --no-include-email)
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity | grep 'Account' | sed 's/[^0-9]*//g')
      - REPOSITORY_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/simple-canary"
      - echo "REPOSITORY_URI $REPOSITORY_URI"
      - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - echo "CODEBUILD_RESOLVED_SOURCE_VERSION $CODEBUILD_RESOLVED_SOURCE_VERSION"
      - echo "CODEBUILD_SOURCE_VERSION $CODEBUILD_SOURCE_VERSION"
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo "COMMIT_HASH $COMMIT_HASH"
      - echo "IMAGE_TAG $IMAGE_TAG"

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Build completed on `date -u +%FT%TZ` (ISO-8601)"
      - echo "Pushing the Docker image"
      ##- docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$(printenv CODEBUILD_BUILD_ID | awk -F':' '{print $2}')
      - docker push "$REPOSITORY_URI:latest"
      - docker push "$REPOSITORY_URI:$IMAGE_TAG"
      - printf '[{"name":"simple-canary","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '[{"name":"simple-canary","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > images.json

artifacts:
  files: images.json
